{"version":3,"sources":["components/display.jsx","components/newpetform.jsx","components/editform.jsx","components/viewpet.jsx","App.js","serviceWorker.js","index.js"],"names":["Display","props","useState","pets","setPets","useEffect","axios","get","then","res","console","log","data","catch","err","className","to","map","pet","i","key","scope","name","type","_id","PetForm","setName","setType","description","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","errors","setErrors","onSubmit","e","preventDefault","NewestPet","post","navigate","onChange","target","value","properties","message","EditPet","updatedPet","put","ViewPet","likes","setLikes","onClick","disabled","delete","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.1cd6cc56.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Display = props => {\r\n\r\n    const [pets, setPets] = useState([]);\r\n\r\n    const fetchPets = () => {\r\n        axios.get(\"http://localhost:8000/api/pets\")\r\n            .then(res => {\r\n                console.log(res);\r\n                setPets(res.data);\r\n                \r\n            }).catch(err => console.log(err));\r\n            \r\n    }\r\n\r\n    useEffect( () => {\r\n       fetchPets();\r\n    }, []);\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h3 className=\"mt-3\">These pets are looking for a good home!</h3>\r\n            <Link className=\"btn btn-outline-primary mt-3\" to=\"/new\">Add a Pet</Link>\r\n           {pets.map( (pet, i) =>\r\n                 <table className=\"table mt-4\" key={i}>\r\n                    <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Type</th>\r\n                        <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th scope=\"row\">{pet.name}</th>\r\n                            <td>{pet.type}</td>\r\n                            <td>\r\n                                <Link className=\"btn btn-outline-primary\" to={`/edit/${pet._id}`}>Edit</Link>\r\n                                <Link className=\"btn btn-outline-primary\" to={`/view/${pet._id}`}>Details</Link>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n               </table>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Display;","import React, { useState } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport axios from 'axios';\r\nimport { Link } from '@reach/router';\r\n\r\nconst PetForm = props => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const CreatePet = e => {\r\n        e.preventDefault();\r\n        const NewestPet = {name, type, description, skill1, skill2, skill3};\r\n        axios.post('http://localhost:8000/api/pets', NewestPet)\r\n            .then(res => {\r\n                console.log(res);\r\n                if(res.data.errors) {\r\n                    setErrors(res.data.errors);\r\n                }else{\r\n                    navigate('/');\r\n                }\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <Link className=\"btn btn-outline-primary\" to=\"/\">Home</Link>\r\n            <h3 className=\"mt-3\">Do you know a pet who needs a home?</h3>\r\n            <div className=\"row\">\r\n                <form className=\"col-sm-8\" onSubmit={CreatePet}>\r\n                    <div className=\"form-group\">\r\n                        <label>Name</label>\r\n                        <input type=\"text\" className=\"form-control\" onChange={e => setName(e.target.value)}/>\r\n                        {errors.name ? <p className=\"text-danger\">{errors.name.properties.message}</p>: \"\" }\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Type</label>\r\n                        <input type=\"text\" className=\"form-control\" onChange={e => setType(e.target.value)}/>\r\n                        {errors.type ? <p className=\"text-danger\">{errors.type.properties.message}</p>: \"\" }\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Description</label>\r\n                        <textarea className=\"form-control\" onChange={e => setDescription(e.target.value)}></textarea>\r\n                        {errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p>: \"\" }\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h4>Skills: (Optional)</h4>\r\n                        <label>Skill 1</label>\r\n                        <input type=\"text\" className=\"form-control\" onChange={e => setSkill1(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Skill 2</label>\r\n                        <input type=\"text\" className=\"form-control\" onChange={e => setSkill2(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Skill 3</label>\r\n                        <input type=\"text\" className=\"form-control\" onChange={e => setSkill3(e.target.value)}/>\r\n                    </div>\r\n                    <input type=\"submit\" className=\"btn btn-success btn-block mt-3\" value=\"Add New Pet\"/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}   \r\nexport default PetForm;","import React, { useState, useEffect } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport axios from 'axios';\r\nimport { Link } from '@reach/router';\r\n\r\n\r\nconst EditPet = props => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect( () => {\r\n        console.log(props._id);\r\n        axios.get(`http://localhost:8000/api/pets/${props._id}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                setName(res.data.name);\r\n                setType(res.data.type);\r\n                setDescription(res.data.description);\r\n                setSkill1(res.data.skill1);\r\n                setSkill2(res.data.skill2);\r\n                setSkill3(res.data.skill3);\r\n            }).catch(err => console.log(err));\r\n    }, [props._id]);\r\n\r\n    const UpdatePet = e => {\r\n        e.preventDefault();\r\n        const updatedPet = {name, type, description, skill1, skill2, skill3};\r\n        axios.put(`http://localhost:8000/api/pets/${props._id}`, updatedPet)\r\n            .then(res => {\r\n                console.log(res);\r\n                if(res.data.errors) {\r\n                    setErrors(res.data.errors);\r\n                }else{\r\n                    navigate('/');\r\n                }\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <Link className=\"btn btn-outline-primary\" to=\"/\">Home</Link>\r\n            <h3 className=\"mt-3\">Edit {name}</h3>\r\n            <div className=\"row\">\r\n                <form className=\"col-sm-8\" onSubmit={UpdatePet}>\r\n                    <div className=\"form-group\">\r\n                        <label>Name</label>\r\n                        <input type=\"text\" className=\"form-control\" value={name} onChange={e => setName(e.target.value)}/>\r\n                        {errors.name ? <p className=\"text-danger\">{errors.name.properties.message}</p>: \"\" }\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Type</label>\r\n                        <input type=\"text\" className=\"form-control\" value={type} onChange={e => setType(e.target.value)}/>\r\n                        {errors.type ? <p className=\"text-danger\">{errors.type.properties.message}</p>: \"\" }\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Description</label>\r\n                        <textarea className=\"form-control\" value={description} onChange={e => setDescription(e.target.value)}></textarea>\r\n                        {errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p>: \"\" }\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Skill 1</label>\r\n                        <input type=\"text\" className=\"form-control\" value={skill1} onChange={e => setSkill1(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Skill 2</label>\r\n                        <input type=\"text\" className=\"form-control\" value={skill2} onChange={e => setSkill2(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Skill 3</label>\r\n                        <input type=\"text\" className=\"form-control\" value={skill3} onChange={e => setSkill3(e.target.value)}/>\r\n                    </div>\r\n                    <input type=\"submit\" className=\"btn btn-success btn-block mt-3\" value=\"Update Pet Info\"/>\r\n                </form>\r\n            \r\n            </div>\r\n        </div>\r\n    );\r\n}   \r\nexport default EditPet;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from '@reach/router';\r\nimport { navigate } from '@reach/router';\r\n\r\n\r\nconst ViewPet = props => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n    const [likes, setLikes] = useState(0);\r\n    \r\n\r\n    useEffect( () => {\r\n        console.log(props._id);\r\n        axios.get(`http://localhost:8000/api/pets/${props._id}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                setName(res.data.name);\r\n                setType(res.data.type);\r\n                setDescription(res.data.description);\r\n                setSkill1(res.data.skill1);\r\n                setSkill2(res.data.skill2);\r\n                setSkill3(res.data.skill3);\r\n            }).catch(err => console.log(err));\r\n    }, [props._id]);\r\n\r\n    const remove = () => {\r\n        // console.log(_id);\r\n        axios.delete(`http://localhost:8000/api/pets/${props._id}`)\r\n        .then(res => {\r\n            console.log(res);\r\n            navigate('/');\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    const increaseLikes = (e) => {\r\n        setLikes((likes+1));\r\n    }\r\n    \r\n    return(\r\n        <div className=\"conainer\">\r\n            <Link className=\"btn btn-outline-primary\" to=\"/\">Home</Link>\r\n           <h2 className=\"mt-3 mb-3\">Details about {name}!!!</h2> \r\n                    <h4>Type: {type}</h4>\r\n                    <h4>Description: {description}</h4>\r\n                    <h4>Skills:</h4>\r\n                        <ul>\r\n                            <li>{skill1}</li>\r\n                            <li>{skill2}</li>\r\n                            <li>{skill3}</li>\r\n                        </ul>\r\n                {\r\n                likes===0 ?\r\n                <button className=\"btn btn-success text-light\" onClick={increaseLikes}> &#128077; Likes: {likes}</button>:\r\n                <button disabled className=\"btn btn-success text-light\"> &#128077; Likes: {likes}</button>\r\n                \r\n                }\r\n                <button className=\"btn btn-danger text-light\" onClick={remove} >Adopt {name}!!</button>\r\n        </div>\r\n            \r\n\r\n    );\r\n    \r\n}\r\n\r\nexport default ViewPet;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Display from './components/display';\nimport { Router, Link } from '@reach/router';\nimport PetForm from './components/newpetform';\nimport EditPet from './components/editform';\nimport ViewPet from './components/viewpet';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"jumbotron bg-primary text-light\">\n        <h1>Pet Shelter</h1>\n      </div>\n      <Router>\n        <Display path='/' />\n        <PetForm path='/new' />\n        <EditPet path=\"/edit/:_id\" />\n        <ViewPet path=\"/view/:_id\" />      \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}